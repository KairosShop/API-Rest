stages:
  - build
  - test
  - post test
  - staging
  - production


variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"

cache:
  paths:
    - node_modules/

api-dependencies:
  image: node:10
  stage: build
  script:
    - npm install
  artifacts:
    paths:
        - node_modules/

config-compile:
  image: node:10
  stage: build
  script:
    - node utils/config-compile.js
  only:
    refs:
      - master
      - staging
  artifacts:
    paths:
      - app.yaml
      - staging-app.yaml
    expire_in: 1 days
    when: always

api-testing:
  image: node:10
  stage: test
  script:
    - npm run test
  artifacts:
    paths:
        - test-report.xml
        - coverage/

deploy_production:
  image: google/cloud-sdk:alpine
  stage: production
  environment: Production
  only:
    - master
  script:
    - echo $SERVICE_ACCOUNT > /tmp/$CI_PIPELINE_ID.json
    - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
    - gcloud --quiet --project $PROJECT_ID app deploy app.yaml dispatch.yaml
  needs:
    - config-compile

deploy_staging:
  image: google/cloud-sdk:alpine
  stage: staging
  environment: Staging
  only:
    - staging
  script:
    - echo $SERVICE_ACCOUNT > /tmp/$CI_PIPELINE_ID.json
    - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
    - gcloud --quiet --project $PROJECT_ID app deploy staging-app.yaml
  needs:
    - config-compile

sonarcloud-check:
  stage: post test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - merge_requests
    - master
    - staging
  needs:
    - api-testing

after_script:
- rm /tmp/$CI_PIPELINE_ID.json